---
import { ViewTransitions } from 'astro:transitions';
import '@fontsource-variable/overpass-mono';
import '@unocss/reset/tailwind.css';
import '@/styles/scrollbar.css';

const props = Astro.props;
const { title, description: desc, post, project } = props;
const description = desc.replace('\n', '');
const url = new URL(Astro.url, Astro.site);
const imageUrl = (project && project.thumbnail)
  ? '/assets/project/' + project.thumbnail
  : (post && post.thumbnail)
    ? '/assets/post/' + post.thumbnail
    : '/assets/logo.webp';

const image = new URL(imageUrl, Astro.site);
const date = (date: string) => new Date(date).toISOString();

const metaTags: Record<string, string> = {
  'og:type': (post || project) ? 'article' : 'website',
  'og:locale': (post && post.language) ?? 'en_US',
  'og:locale:alternate': 'id_ID',
  'og:site_name': 'sglkc.my.id',
  'og:url': url,
  'og:title': title,
  'og:description': description,
  'og:image': image,

  'twitter:card': (imageUrl !== 'logo') ? 'summary_large_image' : 'summary',
  'twitter:url': url,
  'twitter:title': title,
  'twitter:description': description,
  'twitter:image': image,

  ...(post) && {
    'article:published_time': date(post.created),
    'article:modified_time': date(post.updated ?? post.created),
    'article:author': 'sglkc',
    'article:section': 'Blog',
    'article:tag': post.tags.join(',')
  },

  ...(project) && {
    'article:published_time': date(project.created),
    'article:author': 'sglkc',
    'article:section': 'Project',
    'article:tag': project.stack.join(',')
  }
}
---

<html lang={(props && props.post) ? props.post.language : 'en'}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <base target="_blank" />
    <link rel="icon" type="image/webp" href="/assets/logo.webp" />
    <link rel="canonical" href={url} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link
      rel="alternate"
      href={url}
      hreflang={(post && post.language) ? post.language : 'en'}
    />

    <title>{title} // sglkc</title>

    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="theme-color" content="#ECC7BC" />
    <meta name="generator" content={Astro.generator} />
    <meta http-equiv="content-language" content="en, id" />

    <meta
      name="keywords"
      content="personal site, blogging, personal blog, blog project, portfolio, astro"
    />

    { Object.entries(metaTags).map(([ property, content ]) =>
      <meta property={property} content={content} />
    )}

    <ViewTransitions />

    <script>
    const classList = document.documentElement.classList;
    const prefDark = window.matchMedia('(prefers-color-scheme: dark)').matches;

    function onLoad() {
      const theme = localStorage.getItem('theme');

      if (theme === 'dark' || (!theme && prefDark)) {
        localStorage.setItem('theme', 'dark');
        classList.add('dark');
      }

      classList.add('loaded');
    }

    document.addEventListener('astro:page-load', onLoad);
    document.addEventListener('astro:after-swap', onLoad);
    </script>
  </head>
  <body class="background font-overpass">
    <div class="mx-auto p-8 prose prose-zinc dark:prose-invert max-w-[66ch]">
      <slot />
    </div>
  </body>
</html>
