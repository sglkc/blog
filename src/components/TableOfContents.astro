---
import type { MDXLayoutProps } from 'astro';

type Props = {
  headings: MDXLayoutProps<{}>['headings'];
}

const { headings } = Astro.props;
const padding = (depth: number) => {
  switch(depth) {
    case 2: return 'ml-4';
    case 3: return 'ml-8';
    case 4: return 'ml-12';
    case 5: return 'ml-16';
  }
};
---

<blockquote class="pl-6 sm:pl-8 my-12 font-not-italic">
  <h1 class="mb-2 text-2xl">Table of Contents</h1>
  <ol>
    { headings.map(({ depth, slug, text }) => (
      <li class:list={[ 'mb-1 ', padding(depth) ]}>
        <a class="underline-dotted" href={'#' + slug} data-toc>{text}</a>
      </li>
    ))
    }
  </ol>
</blockquote>
<script>
document.querySelectorAll('a[data-toc]').forEach((anchor: any) => {
  anchor.addEventListener('click', (e: PointerEvent) => {
    e.preventDefault();

    const id = anchor.getAttribute('href');
    const elm = document.querySelector(id);

    elm.scrollIntoView({ behavior: 'smooth' });
    history.replaceState('', '', id);
  });
});
</script>
